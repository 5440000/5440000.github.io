Разобраться с кнопкой Last она - показывает не правильный остаток



1) Статьи не кликабельные - что то ж должно кликаться.. 
-Добавил addEventListener на весь див со статьей и тень при наведении

2) Ховерстэйтов нет в навигации и пагинации. 
Добавил тень для ссылок в навигации
Изменил цвет шрифта для цифр и кнопок в пагинации

3) Ховерстейты в футере неоднозначные, мягко говоря.
Готово


4) All articles когда активна - не подчеркнута.


5) Не видно, какой год выбран в данный момент.
6) Вертикальные отступы от и до пагинации сильно отличаются от дизайна
7) Вертикальные отступы внутри статей - явно в глаза бросается, что между интро и автором - отступ больше, чем просто высоты строки.. Да и между автоором и именем компании тоже.
8) First-Last кнопки должны быть неактивными  не кликабельными, когда мы ны первой или последней странице. Естественно когда страница одна - обе должны быть неактивными.


html
1) Инпут на row-col - плохой подход - грид - только для расположения контейнеров.. (тоже касается пагинации, заголовков и тд..)
2) Отступы блоками с высотой - недопустимо (для этого есть маргины, или паддинги на крайняк)
3) Семантики практически нет (*)



css
1) Имена шрифтов зачем фантазировать - используй те что есть, прямо именем шрифта. (На сассе можно что то более вминяемое придумать, но не myfont)
2) По шрифтам - по хоршему - задавать надо на боди основной. А уже там где не основной - подменять. Но не на каждый элемент прописывать шрифт. А вообще, если на чистом цсс - то лучше потом все селекторы, у которых шрифт отличается от основного, через запятую собрать и подменить шрифт. Это неактуально когда есть сасс ил переменные нативные цсс-ные.
3) совсем нет медиаквариз-ов - но думаю их актуально будет использовать, для респонсива...
4) background-color: white; - не используй имена цветов. Лучеш кодом, или переменной, сасс или нативной
5) 0px - не надо px писать - просто 0. У тебя где то так, Где то так...
6) box-shadow: 0px 3px 6px #00000015; - прозрачность не пиши так, лучше rgba(0,0,0,0.15). когда будет сасс, заюзаещь миксин для красивой записи, а на сичтом как я написал лучше.
7) для тествого пиксели пойдут, но в живом проекте конечно ем-рем связку юзать надо будет. когда будет сасс - там уже тоже размер миксинами будешь задавать.. 
8) Классы типа .h-40 {height: 40px;} - допустимы, но использовать только для задания высоты. Для отступов все таки надо m-40, mt-40, mb-40, ну или по бутстраповскому подходу.. А вообще задание жесткой высоты - так себе решение - используется в крайних случаях. Ну и не допустить что б весь код превратился в вот эти хелперы mt-40, pt-20. Такие классы допустимы как реально хелперы.. Реальную разметку блоков -все таки надо как то продумывать и задавать понятные имена.
9) По именованию, вобще, какой нить оптимизированный БЭМ лучше использовать. Ну ил в целом - почитай методологии именования классов в цсс. В тестовом маленькой задании - оно не сыграет роли, но в реальном проекте - придется использовать. Да, у тебя будут цсс модули - но не во всех проектах.. Короче эти все вещи почитаешь в перспективе.
10) border: 2px solid rgb(0, 0, 0); - для таких вещей - лучше кодом цвет задавать. Но в перспективе у тебя будут переменные, и такие записи вообще пропадут..
11) Высоту блокам жестко лучше не задавать - все таки регулировать верикальными отступами от контента.. (допустимо, например в твоём случе с хэдером, но футер лучше паддингами - потому что как правило - в футере количество ссылок непостоянно. Да и по хэдеру тоже, но на простом примере - в принципе можно)
12) Никаких инлайн стилей.
13) Для стилей лучше классы создавать.. Допустимо по аттрибуту - но старайся классами все.
14) id - только для js. никаких айдишников в цсс-е быть не должно (только в безвыходных ситуациях), но у тебя пока таких нету.
15) Ну и никаких импортантов (у тебя их нету, но ты возможно и не особо читал про них). Только в крайних случаях. Как правило ими бэкендеры говнокодят. Избегай всеми возможными способами.

16) Еще раз - col-row-container связка - только для разделдения по колонкам.. Контент внутри - никеаких связей с гридом не должен иметь. В идеале - перенос контента из одной колонки в другую, не должен развалить сам контент, его в идеале делать нужно резиновым, Что б его можно было переносить из одного блока в другой - как например картинка в статье, ил контент статьи - их куда не вставь - они займут всю ширину и не разваляться.


js
1) for - Устаревший подход перебора (иногда используется, но лучше избегать), forEach для переборов лучше юзать. Ну и вобще почитай, Что там в 2015м для этого появилось (методы перебора es2015)
2) btn.innerHTML = ${i}; А так не работает? btn.innerHTML = i;?
3) HideAllItems - юзай все таки lowerCamelCase..
4) когда вешаешь ивент - лучше добавляй именованную функцию - потому что что если удалить ивент надо будет - анонимную не сможешь.
5) раздели вызовы и декларирование функций в файле, А то у тебя декларация - вызов, декларация - вызов.. Вызовы в конец файла собери.. константы - в начало.
6) aaa - избегай таких имен.
7) numberOfItemOnPage - выноси в начало файла, И имена констант, (как и urlJson) - SCREAMING_SNAKE_CASE

Смотри, по скольку, ты скрипт ещё править будешь, То  я его в режиме код ревью глянул, сильно алгоритмы не смотрел, но замечания по организации - оставил.

Все пункты html css js  - они как бы не обязательные - работать будет как ты и написано, но лучше все таки делать как принято..

по ui - я там попиксельно не сравнивал, но т ор что явно виднно без линейки оставил

Важный пункт 8) First-Last кнопки должны быть неактивными  не кликабельными, когда мы ны первой или последней странице. Естественно когда страница одна - обе должны быть неактивными. - Он функциональный, его можешь пока опустить - если  будет время-желание - сделаешь. Но его оставь на конец.

3) Семантики практически нет (*) - это как бы тоже со временем придет, если будет время - поправишь, звезду поставил - потмоу что это по факту целый раздел ХТМЛ, его надо читануть, прежде чем фиксить

поправишь по остаточному принципу